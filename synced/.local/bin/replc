#!/bin/bash

function make_fifo() {
    local fifo="$(mktemp -u)"
    mkfifo "$fifo" || exit
    echo "$fifo"
}

in="$(mktemp --suffix=.c)"

fifo="$(make_fifo)"

(
cat > "$in" << EOF
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <stdlib.h>
    #include <stdbool.h>

    int main(int argc, char** argv) {
        $(cat < "$fifo")
        return 0;
    }
EOF
) &

exec 3>&1
(
    echo -n "> " >&3
    while read -r line; do
        echo -n "> " >&3
        echo -n "$line"
        echo ";"
    done < <(cat)
) > "$fifo"

wait

out="$(mktemp --suffix=.o)"

if ! gcc_out="$(gcc "$in" -o "$out")"; then
    echo "$gcc_out"
    exit 1
fi

"$out"

echo

rm "$in" "$out" "$fifo"
